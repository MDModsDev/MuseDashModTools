<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:MuseDashModToolsUI.ViewModels"
        xmlns:converters="clr-namespace:MuseDashModToolsUI.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="600"
        x:Class="MuseDashModToolsUI.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        x:CompileBindings="True"
        Icon="/Assets/Icon.ico"
        Title="Muse Dash Mod Tools"
        Width="1000" Height="600"
        CanResize="True">

    <Window.Resources>
        <converters:DuplicateConverter x:Key="DuplicateConverter" />
        <converters:VersionColourConverter x:Key="VersionColourConverter" />
        <converters:UninstallConverter x:Key="UninstallConverter" />
        <converters:VersionTextConverter x:Key="VersionTextConverter" />
        <converters:InstallationTextConverter x:Key="InstallationTextConverter" />
    </Window.Resources>

    <Window.Styles>
        <Style Selector="ToggleSwitch">
            <Setter Property="Margin" Value="300,20,0,20" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="BorderBrush" Value="#DDD" />
        </Style>
        <Style Selector="Expander ToggleButton#PART_toggle">
            <Setter Property="Margin" Value="0,17,0,23" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
    </Window.Styles>

    <Grid ColumnDefinitions="140,*">
        <controls:NavigationDrawer Grid.Column="0" Name="NavigationDrawer" LeftDrawerOpened="True" LeftDrawerWidth="140">
            <controls:NavigationDrawer.LeftDrawerContent>
                <ListBox Name="DrawerList" Focusable="{Binding ElementName=DrawerList}">
                    <ListBox.Styles>
                        <Style Selector="ListBoxItem">
                            <Setter Property="Height" Value="50" />
                            <Setter Property="BorderBrush" Value="#333333" />
                            <Setter Property="BorderThickness" Value="0.5" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <Style Selector="ListBoxItem:selected ContentPresenter">
                            <Setter Property="Background" Value="#737373" />
                        </Style>
                        <Style Selector="Label">
                            <Setter Property="Width" Value="140" />
                            <Setter Property="Height" Value="50" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Background" Value="#0000" />
                        </Style>
                    </ListBox.Styles>
                    <Label>
                        <TextBlock Classes="Body1" Text="All" />
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="PointerPressed">
                                <InvokeCommandAction Command="{Binding FilterAllCommand, Mode=OneWay}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>
                    </Label>
                    <Label>
                        <TextBlock Classes="Body1" Text="Installed" />
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="PointerPressed">
                                <InvokeCommandAction Command="{Binding FilterInstalledCommand, Mode=OneWay}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>
                    </Label>
                    <Label>
                        <TextBlock Classes="Body1" Text="Enabled" />
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="PointerPressed">
                                <InvokeCommandAction Command="{Binding FilterEnabledCommand, Mode=OneWay}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>
                    </Label>
                    <Label>
                        <TextBlock Classes="Body1" Text="Outdated" />
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="PointerPressed">
                                <InvokeCommandAction Command="{Binding FilterOutdatedCommand, Mode=OneWay}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>
                    </Label>
                    <Label>
                        <TextBlock Classes="Body1" Text="Incompatible" />
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="PointerPressed">
                                <InvokeCommandAction Command="{Binding FilterIncompatibleCommand, Mode=OneWay}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>
                    </Label>
                </ListBox>
            </controls:NavigationDrawer.LeftDrawerContent>
        </controls:NavigationDrawer>
        <StackPanel Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Bottom">
            <StackPanel.Styles>
                <Style Selector="Button">
                    <Setter Property="Foreground" Value="#CCC" />
                    <Setter Property="Background" Value="#4D4D4D" />
                    <Setter Property="Width" Value="120" />
                    <Setter Property="Height" Value="50" />
                    <Setter Property="Margin" Value="0,5" />
                </Style>
                <Style Selector="Button:pointerover ContentPresenter">
                    <Setter Property="Background" Value="#808080" />
                </Style>
            </StackPanel.Styles>
            <Button Command="{Binding InstallMelonLoaderCommand}" Content="Install&#x0a;MelonLoader" />
            <Button Command="{Binding UninstallMelonLoaderCommand}" Content="Uninstall&#x0a;MelonLoader" />
            <Button Command="{Binding ChoosePathCommand}" Content="Path" />
            <Button Command="{Binding OpenModsFolderCommand}" Content="Mods" />
        </StackPanel>
        <Separator Grid.Column="0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Stretch"
                   Margin="140,0,0,0" Width="1"
                   Background="#333333"
                   BorderBrush="#333333" />
        <TextBox Grid.Column="1" x:Name="Input_SearchFilter"
                 Margin="14,0,0,0"
                 Text="{Binding Filter}"
                 Height="50"
                 Background="#0000"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Top"
                 TextWrapping="NoWrap"
                 Watermark="Search Mods"
                 BorderBrush="#333333"
                 BorderThickness="1"
                 SelectionBrush="#282828"
                 SelectionForegroundBrush="#bbb"
                 CornerRadius="1"
                 AcceptsReturn="False" />
        <ScrollViewer Grid.Column="1" Margin="0,50,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <StackPanel ScrollViewer.VerticalScrollBarVisibility="Visible" x:Name="ModItemsContainer" Orientation="Vertical">
                <StackPanel.Styles>
                    <Style Selector="StackPanel > TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                    <Style Selector="Button:pointerover ContentPresenter">
                        <Setter Property="Background" Value="#8C8C8C" />
                    </Style>
                    <Style Selector="Button:pressed ContentPresenter">
                        <Setter Property="Background" Value="#595959" />
                    </Style>
                    <Style Selector="Button:disabled ContentPresenter">
                        <Setter Property="Background" Value="#595959" />
                    </Style>
                </StackPanel.Styles>
                <ItemsControl Foreground="Transparent" Background="Transparent" Items="{Binding Mods}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Tag="{Binding Name}">
                                <Expander Margin="0,0,15,0">
                                    <Expander.Header>
                                        <Label Height="80"
                                               HorizontalContentAlignment="Left"
                                               VerticalContentAlignment="Center">
                                            <TextBlock Classes="Body2"
                                                       Text="{Binding Name}"
                                                       Foreground="{Binding .,Converter={StaticResource DuplicateConverter}}" />
                                        </Label>
                                    </Expander.Header>

                                    <StackPanel Tag="ExpanderContent" HorizontalAlignment="Stretch" Margin="40,0,0,20">
                                        <StackPanel.Styles>
                                            <Style Selector="TextBlock">
                                                <Setter Property="Foreground" Value="#CCC" />
                                            </Style>
                                        </StackPanel.Styles>
                                        <TextBlock Classes="Body2" Text="{Binding XamlDescription}" />

                                        <TextBlock Classes="Body2" Text="{Binding ., Converter={StaticResource VersionTextConverter}}"
                                                   Foreground="{Binding ., Converter={StaticResource VersionColourConverter}}" />

                                        <Button IsVisible="{Binding IsValidHomePage}"
                                                Command="{ReflectionBinding $parent[ItemsControl].DataContext.OpenUrlCommand}"
                                                CommandParameter="{Binding HomePage}"
                                                Tag="mod.Homepage"
                                                Width="120"
                                                HorizontalAlignment="Left"
                                                Margin="0,5,0,0"
                                                Content="HomePage" />

                                        <StackPanel IsVisible="{Binding DependencyCount}" Margin="0,5,0,0">
                                            <TextBlock Classes="Body2">Dependencies:</TextBlock>
                                            <TextBlock Classes="Body2" Text="{Binding DependencyNames}" />
                                        </StackPanel>

                                        <StackPanel IsVisible="{Binding IsDuplicated}" Margin="0,10,0,0">
                                            <TextBlock Classes="Body2" Text="Duplicated by:" />
                                            <TextBlock Classes="Body2" Text="{Binding DuplicatedModNames}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>

                                <StackPanel Orientation="Horizontal" Margin="0,0,10,0">
                                    <StackPanel.Styles>
                                        <Style Selector="Button">
                                            <Setter Property="VerticalAlignment" Value="Top" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Width" Value="100" />
                                            <Setter Property="Height" Value="40" />
                                            <Setter Property="Margin" Value="40,23,0,17" />
                                        </Style>
                                    </StackPanel.Styles>
                                    <ToggleSwitch IsChecked="{Binding !IsDisabled }"
                                                  IsEnabled="{Binding IsLocal}"
                                                  Height="40"
                                                  Margin="300,23,0,17"
                                                  Command="{ReflectionBinding $parent[ItemsControl].DataContext.ToggleModCommand}"
                                                  CommandParameter="{Binding .}"
                                                  Foreground="#DDD" />

                                    <Button Classes="Dark" IsVisible="{Binding IsLocal}" Tag="{Binding Name}"
                                            Foreground="{Binding ., Converter={StaticResource UninstallConverter}}"
                                            Command="{ReflectionBinding $parent[ItemsControl].DataContext.DeleteModCommand}"
                                            CommandParameter="{Binding .}"
                                            Content="Uninstall" />

                                    <Button Classes="Dark" IsVisible="{Binding !IsLocal}" Tag="{Binding Name}"
                                            IsEnabled="{Binding !IsIncompatible}"
                                            Command="{ReflectionBinding $parent[ItemsControl].DataContext.InstallModCommand}"
                                            CommandParameter="{Binding .}"
                                            Content="Install" />

                                    <Button Classes="Dark" IsVisible="{Binding IsUpdatable}" Tag="{Binding Name}"
                                            Foreground="{Binding ., Converter={StaticResource VersionColourConverter}}"
                                            Command="{ReflectionBinding $parent[ItemsControl].DataContext.ReinstallModCommand}"
                                            CommandParameter="{Binding .}"
                                            Content="{Binding ., Converter={StaticResource InstallationTextConverter}}" />

                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
    </Grid>

</Window>