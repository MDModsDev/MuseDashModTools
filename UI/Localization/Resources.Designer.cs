//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MuseDashModToolsUI.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MuseDashModToolsUI.Localization.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Muse Dash Folder.
        /// </summary>
        internal static string FolderDialog_Title {
            get {
                return ResourceManager.GetString("FolderDialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string MsgBox_Button_No {
            get {
                return ResourceManager.GetString("MsgBox_Button_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No and Don&apos;t Ask Again.
        /// </summary>
        internal static string MsgBox_Button_NoNoAsk {
            get {
                return ResourceManager.GetString("MsgBox_Button_NoNoAsk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string MsgBox_Button_Yes {
            get {
                return ResourceManager.GetString("MsgBox_Button_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes and Don&apos;t Ask Again.
        /// </summary>
        internal static string MsgBox_Button_YesNoAsk {
            get {
                return ResourceManager.GetString("MsgBox_Button_YesNoAsk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your downloaded mods are broken\nPlease delete 0KB mod if it exist, then restart the application\n{0}.
        /// </summary>
        internal static string MsgBox_Content_BrokenMods {
            get {
                return ResourceManager.GetString("MsgBox_Content_BrokenMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod enable/disable failed\n{0}.
        /// </summary>
        internal static string MsgBox_Content_ChangeModStateFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_ChangeModStateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod enable/disable failed. Is the game running?\n{0}.
        /// </summary>
        internal static string MsgBox_Content_ChangeModStateFailed_Game {
            get {
                return ResourceManager.GetString("MsgBox_Content_ChangeModStateFailed_Game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod enable/disable failed. Unauthorized\n{0}.
        /// </summary>
        internal static string MsgBox_Content_ChangeModStateFailed_Unauthorized {
            get {
                return ResourceManager.GetString("MsgBox_Content_ChangeModStateFailed_Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking updates failed\nAre you online?.
        /// </summary>
        internal static string MsgBox_Content_CheckUpdateFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_CheckUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose correct Muse Dash folder first!.
        /// </summary>
        internal static string MsgBox_Content_ChooseCorrectPath {
            get {
                return ResourceManager.GetString("MsgBox_Content_ChooseCorrectPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You haven&apos;t choose Muse Dash Folder\nPlease choose the folder.
        /// </summary>
        internal static string MsgBox_Content_ChoosePath {
            get {
                return ResourceManager.GetString("MsgBox_Content_ChoosePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot copy Updater.exe to target path\n{0}.
        /// </summary>
        internal static string MsgBox_Content_CopyUpdaterFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_CopyUpdaterFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete MelonLoader.zip in\n{0}\nError:{1}\nTry manually delete.
        /// </summary>
        internal static string MsgBox_Content_DeleteMelonLoaderZipFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_DeleteMelonLoaderZipFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is used by {1} as dependency\nAre you sure you want to delete this mod?.
        /// </summary>
        internal static string MsgBox_Content_DeleteModConfirm {
            get {
                return ResourceManager.GetString("MsgBox_Content_DeleteModConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is used by {1} as dependency\nAre you sure you want to disable this mod?.
        /// </summary>
        internal static string MsgBox_Content_DisableModConfirm {
            get {
                return ResourceManager.GetString("MsgBox_Content_DisableModConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to disable the mods depend on {0}?.
        /// </summary>
        internal static string MsgBox_Content_DisableReverseDependency {
            get {
                return ResourceManager.GetString("MsgBox_Content_DisableReverseDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please manually choose and delete the duplicated mod\n{0}.
        /// </summary>
        internal static string MsgBox_Content_DuplicateMods {
            get {
                return ResourceManager.GetString("MsgBox_Content_DuplicateMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to enable {0}&apos;s dependency {1}?.
        /// </summary>
        internal static string MsgBox_Content_EnableDependency {
            get {
                return ResourceManager.GetString("MsgBox_Content_EnableDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to verify MuseDash.exe\nMake sure you selected the right folder.
        /// </summary>
        internal static string MsgBox_Content_ExeVerifyFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_ExeVerifyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your game path doesn&apos;t contain &quot;steamapps\common\Muse Dash&quot;\nAre you using pirate version?.
        /// </summary>
        internal static string MsgBox_Content_GamePathError {
            get {
                return ResourceManager.GetString("MsgBox_Content_GamePathError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get mod list from any source.
        /// </summary>
        internal static string MsgBox_Content_GetModListFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_GetModListFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have incorrect MelonLoader version installed: {0}\nPlease use the button in ModManage window to install MelonLoader 0.5.7.
        /// </summary>
        internal static string MsgBox_Content_IncorrectMelonLoaderVersion {
            get {
                return ResourceManager.GetString("MsgBox_Content_IncorrectMelonLoaderVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MuseDash.exe is not correct version \nAre you using a pirated or modified version?.
        /// </summary>
        internal static string MsgBox_Content_IncorrectVersion {
            get {
                return ResourceManager.GetString("MsgBox_Content_IncorrectVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency {0} failed to install\n{1}.
        /// </summary>
        internal static string MsgBox_Content_InstallDependencyFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallDependencyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You did not install MelonLoader\nWhich is needed to run all the mods\nInstall Now?.
        /// </summary>
        internal static string MsgBox_Content_InstallMelonLoader {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallMelonLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MelonLoader download failed\n{0}.
        /// </summary>
        internal static string MsgBox_Content_InstallMelonLoaderFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallMelonLoaderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MelonLoader download failed due to internet\nAre you online?\n{0}.
        /// </summary>
        internal static string MsgBox_Content_InstallMelonLoaderFailed_Internet {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallMelonLoaderFailed_Internet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MelonLoader has been successfully installed\n.
        /// </summary>
        internal static string MsgBox_Content_InstallMelonLoaderSuccess {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallMelonLoaderSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod installation failed\n{0}.
        /// </summary>
        internal static string MsgBox_Content_InstallModFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallModFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod installation failed. Is the game running?\n{0}.
        /// </summary>
        internal static string MsgBox_Content_InstallModFailed_Game {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallModFailed_Game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod installation failed. Are you online?\n{0}.
        /// </summary>
        internal static string MsgBox_Content_InstallModFailed_Internet {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallModFailed_Internet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has been successfully installed\n.
        /// </summary>
        internal static string MsgBox_Content_InstallModSuccess {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallModSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have MuseDashModTools mod installed\nWhich checks available update for all the mods when launching Muse Dash\nInstall Now?.
        /// </summary>
        internal static string MsgBox_Content_InstallModTools {
            get {
                return ResourceManager.GetString("MsgBox_Content_InstallModTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path you have chosen is invalid. Try again.
        /// </summary>
        internal static string MsgBox_Content_InvalidPath {
            get {
                return ResourceManager.GetString("MsgBox_Content_InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check update success\nYou are using the latest version of Muse Dash Mod Tools.
        /// </summary>
        internal static string MsgBox_Content_LatestVersion {
            get {
                return ResourceManager.GetString("MsgBox_Content_LatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A newer version of Muse Dash Mod Tools ({0}) is released\n\nDo you want to install it now?\n\nRelease Title:\n{1}\n\nRelease Info:\n{2}.
        /// </summary>
        internal static string MsgBox_Content_NewerVersion {
            get {
                return ResourceManager.GetString("MsgBox_Content_NewerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have application path in the log.
        /// </summary>
        internal static string MsgBox_Content_NoApplicationPath {
            get {
                return ResourceManager.GetString("MsgBox_Content_NoApplicationPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find purchase record for Muse Dash&apos;s DLC\nYou have to buy it in order to play custom chart.
        /// </summary>
        internal static string MsgBox_Content_NoDlcPurchased {
            get {
                return ResourceManager.GetString("MsgBox_Content_NoDlcPurchased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod does not have an available resource for download\n.
        /// </summary>
        internal static string MsgBox_Content_NoDownloadLink {
            get {
                return ResourceManager.GetString("MsgBox_Content_NoDownloadLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find MuseDash.exe or GameAssembly.dll\nPlease choose the right folder.
        /// </summary>
        internal static string MsgBox_Content_NoExeFound {
            get {
                return ResourceManager.GetString("MsgBox_Content_NoExeFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify you have bought the game on Steam\nAre you using pirate version?.
        /// </summary>
        internal static string MsgBox_Content_NoInstallRecord {
            get {
                return ResourceManager.GetString("MsgBox_Content_NoInstallRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Log File Found\nYou have to launch the game once after installing MelonLoader to generate log.
        /// </summary>
        internal static string MsgBox_Content_NoLogFile {
            get {
                return ResourceManager.GetString("MsgBox_Content_NoLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find MelonLoader Folder\nHave you installed MelonLoader?.
        /// </summary>
        internal static string MsgBox_Content_NoMelonLoaderFolder {
            get {
                return ResourceManager.GetString("MsgBox_Content_NoMelonLoaderFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your stored Muse Dash Folder path is null\nPlease choose the correct folder.
        /// </summary>
        internal static string MsgBox_Content_NullPath {
            get {
                return ResourceManager.GetString("MsgBox_Content_NullPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is outdated, please update using &quot;ModManage&quot;page.
        /// </summary>
        internal static string MsgBox_Content_OutdatedMod {
            get {
                return ResourceManager.GetString("MsgBox_Content_OutdatedMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read current game version\nDo you fully installed Muse Dash?\nPlease check your globalgamemanagers file in\n{0}.
        /// </summary>
        internal static string MsgBox_Content_ReadGameVersionFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_ReadGameVersionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are asking to reinstall {0}\nPlease confirm your operation.
        /// </summary>
        internal static string MsgBox_Content_ReinstallMod {
            get {
                return ResourceManager.GetString("MsgBox_Content_ReinstallMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are asking to uninstall MelonLoader\nPlease confirm your operation.
        /// </summary>
        internal static string MsgBox_Content_UninstallMelonLoader {
            get {
                return ResourceManager.GetString("MsgBox_Content_UninstallMelonLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot uninstall MelonLoader\nPlease make sure your game is not running!.
        /// </summary>
        internal static string MsgBox_Content_UninstallMelonLoaderFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_UninstallMelonLoaderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MelonLoader has been successfully uninstalled\n.
        /// </summary>
        internal static string MsgBox_Content_UninstallMelonLoaderSuccess {
            get {
                return ResourceManager.GetString("MsgBox_Content_UninstallMelonLoaderSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod uninstall failed. Is the game running?\n{0}.
        /// </summary>
        internal static string MsgBox_Content_UninstallModFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_UninstallModFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod uninstall failed\n{0}.
        /// </summary>
        internal static string MsgBox_Content_UninstallModFailed_Game {
            get {
                return ResourceManager.GetString("MsgBox_Content_UninstallModFailed_Game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete file that doesn&apos;t exist.
        /// </summary>
        internal static string MsgBox_Content_UninstallModFailed_Null {
            get {
                return ResourceManager.GetString("MsgBox_Content_UninstallModFailed_Null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has been successfully deleted\n.
        /// </summary>
        internal static string MsgBox_Content_UninstallModSuccess {
            get {
                return ResourceManager.GetString("MsgBox_Content_UninstallModSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot unzip MelonLoader.zip in\n{0}\nError:{1}\nTry manually unzip?.
        /// </summary>
        internal static string MsgBox_Content_UnzipMelonLoaderFailed {
            get {
                return ResourceManager.GetString("MsgBox_Content_UnzipMelonLoaderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find Updater.exe\nPlease make sure you have downloaded full software.
        /// </summary>
        internal static string MsgBox_Content_UpdaterNotFound {
            get {
                return ResourceManager.GetString("MsgBox_Content_UpdaterNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure.
        /// </summary>
        internal static string MsgBox_Title_Failure {
            get {
                return ResourceManager.GetString("MsgBox_Title_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notice.
        /// </summary>
        internal static string MsgBox_Title_Notice {
            get {
                return ResourceManager.GetString("MsgBox_Title_Notice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string MsgBox_Title_Success {
            get {
                return ResourceManager.GetString("MsgBox_Title_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string MsgBox_Title_Warning {
            get {
                return ResourceManager.GetString("MsgBox_Title_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Project.
        /// </summary>
        internal static string XAML_About_Project {
            get {
                return ResourceManager.GetString("XAML_About_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string XAML_All {
            get {
                return ResourceManager.GetString("XAML_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing Log.
        /// </summary>
        internal static string XAML_Analyze {
            get {
                return ResourceManager.GetString("XAML_Analyze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        internal static string XAML_Apply {
            get {
                return ResourceManager.GetString("XAML_Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always Ask.
        /// </summary>
        internal static string XAML_AskType_Always {
            get {
                return ResourceManager.GetString("XAML_AskType_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string XAML_AskType_No {
            get {
                return ResourceManager.GetString("XAML_AskType_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string XAML_AskType_Yes {
            get {
                return ResourceManager.GetString("XAML_AskType_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Path.
        /// </summary>
        internal static string XAML_ChangePath {
            get {
                return ResourceManager.GetString("XAML_ChangePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Update.
        /// </summary>
        internal static string XAML_Check_Update {
            get {
                return ResourceManager.GetString("XAML_Check_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Source: .
        /// </summary>
        internal static string XAML_DownloadSource {
            get {
                return ResourceManager.GetString("XAML_DownloadSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gitee.
        /// </summary>
        internal static string XAML_DownloadSource_Gitee {
            get {
                return ResourceManager.GetString("XAML_DownloadSource_Gitee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Github.
        /// </summary>
        internal static string XAML_DownloadSource_Github {
            get {
                return ResourceManager.GetString("XAML_DownloadSource_Github", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Github Mirror.
        /// </summary>
        internal static string XAML_DownloadSource_GithubMirror {
            get {
                return ResourceManager.GetString("XAML_DownloadSource_GithubMirror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string XAML_Enabled {
            get {
                return ResourceManager.GetString("XAML_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font:.
        /// </summary>
        internal static string XAML_Font {
            get {
                return ResourceManager.GetString("XAML_Font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help Translate.
        /// </summary>
        internal static string XAML_HelpTranslate {
            get {
                return ResourceManager.GetString("XAML_HelpTranslate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HomePage.
        /// </summary>
        internal static string XAML_HomePage {
            get {
                return ResourceManager.GetString("XAML_HomePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible.
        /// </summary>
        internal static string XAML_Incompatible {
            get {
                return ResourceManager.GetString("XAML_Incompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install\nMelonLoader.
        /// </summary>
        internal static string XAML_Install_MelonLoader {
            get {
                return ResourceManager.GetString("XAML_Install_MelonLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        internal static string XAML_Install_Mod {
            get {
                return ResourceManager.GetString("XAML_Install_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed.
        /// </summary>
        internal static string XAML_Installed {
            get {
                return ResourceManager.GetString("XAML_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language: .
        /// </summary>
        internal static string XAML_Language {
            get {
                return ResourceManager.GetString("XAML_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Log Folder.
        /// </summary>
        internal static string XAML_LogFolder {
            get {
                return ResourceManager.GetString("XAML_LogFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string XAML_Mod_CompatibleGameVersion {
            get {
                return ResourceManager.GetString("XAML_Mod_CompatibleGameVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies:.
        /// </summary>
        internal static string XAML_Mod_Dependencies {
            get {
                return ResourceManager.GetString("XAML_Mod_Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} \n\nAuthor: {1} \nOnline Version: {2}\nCompatible Game Version: {3}.
        /// </summary>
        internal static string XAML_Mod_Description {
            get {
                return ResourceManager.GetString("XAML_Mod_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated by:.
        /// </summary>
        internal static string XAML_Mod_Duplicate {
            get {
                return ResourceManager.GetString("XAML_Mod_Duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}&apos;s {1} version is incompatible with your game version.
        /// </summary>
        internal static string XAML_Mod_Incompatible {
            get {
                return ResourceManager.GetString("XAML_Mod_Incompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Version: {0} (Modified).
        /// </summary>
        internal static string XAML_Mod_Modified {
            get {
                return ResourceManager.GetString("XAML_Mod_Modified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Version: {0} (WOW MOD DEV).
        /// </summary>
        internal static string XAML_Mod_Newer {
            get {
                return ResourceManager.GetString("XAML_Mod_Newer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Version: {0}.
        /// </summary>
        internal static string XAML_Mod_Normal {
            get {
                return ResourceManager.GetString("XAML_Mod_Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Version: {0} (Has a newer version: {1}).
        /// </summary>
        internal static string XAML_Mod_Outdated {
            get {
                return ResourceManager.GetString("XAML_Mod_Outdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        internal static string XAML_ModsFolder {
            get {
                return ResourceManager.GetString("XAML_ModsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outdated.
        /// </summary>
        internal static string XAML_Outdated {
            get {
                return ResourceManager.GetString("XAML_Outdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Muse Dash Folder Path.
        /// </summary>
        internal static string XAML_Path {
            get {
                return ResourceManager.GetString("XAML_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reinstall.
        /// </summary>
        internal static string XAML_Reinstall_Mod {
            get {
                return ResourceManager.GetString("XAML_Reinstall_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search Mods    (Name, Author, Descriptions).
        /// </summary>
        internal static string XAML_SearchBar {
            get {
                return ResourceManager.GetString("XAML_SearchBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable dependency when deleting mod.
        /// </summary>
        internal static string XAML_Setting_DisableDependency_Delete {
            get {
                return ResourceManager.GetString("XAML_Setting_DisableDependency_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable dependency when disabling mod.
        /// </summary>
        internal static string XAML_Setting_DisableDependency_Disable {
            get {
                return ResourceManager.GetString("XAML_Setting_DisableDependency_Disable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable dependency when enabling mod.
        /// </summary>
        internal static string XAML_Setting_EnableDependency_Enable {
            get {
                return ResourceManager.GetString("XAML_Setting_EnableDependency_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable dependency when installing mod.
        /// </summary>
        internal static string XAML_Setting_EnableDependency_Install {
            get {
                return ResourceManager.GetString("XAML_Setting_EnableDependency_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analysis.
        /// </summary>
        internal static string XAML_Tab_LogAnalysis {
            get {
                return ResourceManager.GetString("XAML_Tab_LogAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        internal static string XAML_Tab_ModManage {
            get {
                return ResourceManager.GetString("XAML_Tab_ModManage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting.
        /// </summary>
        internal static string XAML_Tab_Setting {
            get {
                return ResourceManager.GetString("XAML_Tab_Setting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall\nMelonLoader.
        /// </summary>
        internal static string XAML_Uninstall_MelonLoader {
            get {
                return ResourceManager.GetString("XAML_Uninstall_MelonLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        internal static string XAML_Uninstall_Mod {
            get {
                return ResourceManager.GetString("XAML_Uninstall_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        internal static string XAML_Update_Mod {
            get {
                return ResourceManager.GetString("XAML_Update_Mod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserData.
        /// </summary>
        internal static string XAML_UserDataFolder {
            get {
                return ResourceManager.GetString("XAML_UserDataFolder", resourceCulture);
            }
        }
    }
}
