//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MuseDashModTools.Localization.ModDescription {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [DebuggerNonUserCode()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MuseDashModTools.Localization.ModDescription.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Adds a more exact accuracy indicator on the bottom of the screen.\nAlso displays average accuracy in milliseconds at the end of the level..
        /// </summary>
        internal static string Accuracy_Indicator {
            get {
                return ResourceManager.GetString("Accuracy Indicator", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A live accuracy display for your viewing pleasure..
        /// </summary>
        internal static string AccuracyDisplay {
            get {
                return ResourceManager.GetString("AccuracyDisplay", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Mutes the game when it&apos;s not focused..
        /// </summary>
        internal static string Alt_Tab_Mute {
            get {
                return ResourceManager.GetString("Alt Tab Mute", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Boss always shoots pigeons, tutorial is always april fool&apos;s version, and activates good tek hidden.
        /// </summary>
        internal static string AlwaysAprilFool {
            get {
                return ResourceManager.GetString("AlwaysAprilFool", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A mod which changes the background and character etc into black and white in tohou scene.
        /// </summary>
        internal static string AlwaysBadApple {
            get {
                return ResourceManager.GetString("AlwaysBadApple", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Boss always shoots pigeons, do not use AlwaysAprilFool at the same time.
        /// </summary>
        internal static string AlwaysPigeons {
            get {
                return ResourceManager.GetString("AlwaysPigeons", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Displays the best character combination for a level in the pause screen\nThe character combo displayed is usually correct, but don&apos;t put your blind faith in it\nWhen in doubt, refer to CharacterScoreboard.
        /// </summary>
        internal static string BestCombinationSuggest {
            get {
                return ResourceManager.GetString("BestCombinationSuggest", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A mod which displays the BPM info above level designer on preparation screen.
        /// </summary>
        internal static string BPMDisplay {
            get {
                return ResourceManager.GetString("BPMDisplay", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Everytime you play a chart, a random character combination will be selected.
        /// </summary>
        internal static string CharacterRandomizer {
            get {
                return ResourceManager.GetString("CharacterRandomizer", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Displays which character a specific score was achieved with on the leaderboard (OCS)\nIt can also display your own local scores (LCS)\nLCS and OCS have inconsistent behavior on custom songs..
        /// </summary>
        internal static string CharacterScoreboard {
            get {
                return ResourceManager.GetString("CharacterScoreboard", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to queue custom charts to be deleted or moved when you exit the game..
        /// </summary>
        internal static string ChartDeleter {
            get {
                return ResourceManager.GetString("ChartDeleter", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Automatically selects sleepwalker, sets offset to 0, sets fever to manual, disables certain UI elements.\nCan be toggled on/off while in-game.
        /// </summary>
        internal static string ChartReview {
            get {
                return ResourceManager.GetString("ChartReview", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Censores certain aspects of the game (Characters, illustrations, etc).
        /// </summary>
        internal static string ChineseMode {
            get {
                return ResourceManager.GetString("ChineseMode", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The mod that allows you to see video backgrounds in custom charts.
        /// </summary>
        internal static string Cinema {
            get {
                return ResourceManager.GetString("Cinema", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The mod that allows you to load in custom charts.
        /// </summary>
        internal static string CustomAlbums {
            get {
                return ResourceManager.GetString("CustomAlbums", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to use add the streamer tag in your info.json to mark a song as copyright-free\n(for use with streamer mode).
        /// </summary>
        internal static string CustomAnchorSupport {
            get {
                return ResourceManager.GetString("CustomAnchorSupport", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to adjust background brightness lower than 40%.
        /// </summary>
        internal static string CustomBGBrightness {
            get {
                return ResourceManager.GetString("CustomBGBrightness", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to set custom hitsounds\nDetailed instructions in the github readme.
        /// </summary>
        internal static string CustomHitSound {
            get {
                return ResourceManager.GetString("CustomHitSound", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to add custom loading screens (CustomLoadingScreens folder)\nAlso allows you to add custom loading screen messages (UserData/CustomLoadingScreens.cfg)\nMessages can be paired with an image, or be left as random.
        /// </summary>
        internal static string CustomLoadingScreens {
            get {
                return ResourceManager.GetString("CustomLoadingScreens", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Adds a Custom option in resolution settings, which can be changed in the config.
        /// </summary>
        internal static string CustomResolution {
            get {
                return ResourceManager.GetString("CustomResolution", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Disables some in-game effects.
        /// </summary>
        internal static string EffectDisable {
            get {
                return ResourceManager.GetString("EffectDisable", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to favorite characters and elfins\nThis will make you look like that character even if another character is selected.\nYou will have the abilities of the selected character &amp; your plays will be submitted as such.
        /// </summary>
        internal static string FavGirl {
            get {
                return ResourceManager.GetString("FavGirl", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Tells you whether you&apos;re on All Perfect/Full Combo pace, and displays the number of misses/greats.
        /// </summary>
        internal static string FC_AP_indicator {
            get {
                return ResourceManager.GetString("FC AP indicator", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Disables the fever background effect.
        /// </summary>
        internal static string FeverEffectDisable {
            get {
                return ResourceManager.GetString("FeverEffectDisable", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to submit scores on custom charts obtained from the MDMC website.
        /// </summary>
        internal static string Headquarters {
            get {
                return ResourceManager.GetString("Headquarters", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Adds a button to always show hidden difficulties.\nE.g. you don&apos;t need to spam click and such to unlock them before playing.
        /// </summary>
        internal static string HiddenQoL {
            get {
                return ResourceManager.GetString("HiddenQoL", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Skips past opening scene by speeding the game up.\nYou can configure the speed and whether to skip past the animated illustration.\nSpiritual successor of RobotLucca&apos;s mod.
        /// </summary>
        internal static string IntroSkip {
            get {
                return ResourceManager.GetString("IntroSkip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A library for other mods to parse and listen to keybinds.
        /// </summary>
        internal static string KeybindManager {
            get {
                return ResourceManager.GetString("KeybindManager", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A library for other mods to localize text.
        /// </summary>
        internal static string LocalizeLib {
            get {
                return ResourceManager.GetString("LocalizeLib", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Muse Dash Rich Presence, which is exactly what it says it is..
        /// </summary>
        internal static string MDRPC {
            get {
                return ResourceManager.GetString("MDRPC", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to disable &amp; delete mods while in-game..
        /// </summary>
        internal static string ModManager {
            get {
                return ResourceManager.GetString("ModManager", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A library that makes it easier to access PlayerData, BattleComponents info and create UI elements.\nThis mod does nothing by itself..
        /// </summary>
        internal static string Muse_Dash_Mirror {
            get {
                return ResourceManager.GetString("Muse Dash Mirror", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Automatically detects and logs available mod updates..
        /// </summary>
        internal static string MuseDashModTools {
            get {
                return ResourceManager.GetString("MuseDashModTools", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Prevents the game from automatically pausing when the game loses focus..
        /// </summary>
        internal static string NoAutoPause {
            get {
                return ResourceManager.GetString("NoAutoPause", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Level up animations take ages;\nLet&apos;s skip them..
        /// </summary>
        internal static string NoLevelUpAnimations {
            get {
                return ResourceManager.GetString("NoLevelUpAnimations", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to disable the judgements in-game.\n(example: show early/late perfects but not pure perfects)\nInspired by ADOFAI Tweaks.
        /// </summary>
        internal static string PerfectDisable {
            get {
                return ResourceManager.GetString("PerfectDisable", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A library for other mods to manage popups and windows.
        /// </summary>
        internal static string PopupLib {
            get {
                return ResourceManager.GetString("PopupLib", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A mod that that allows let&apos;s you prevent a score from uploading,\nand still be able to take a screenshot..
        /// </summary>
        internal static string PreventLowAcc {
            get {
                return ResourceManager.GetString("PreventLowAcc", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to use Delete to instantly leave a chart &amp; Allows you to use Backspace to instantly restart a chart\nUpdate now allows you to set custom keybinds..
        /// </summary>
        internal static string QuickRestart {
            get {
                return ResourceManager.GetString("QuickRestart", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to set keybinds to quickly change your characters.\nNow has an in-game menu to add keybinds.
        /// </summary>
        internal static string QuickSwitchCombination {
            get {
                return ResourceManager.GetString("QuickSwitchCombination", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Makes it possible for customs to use certain background decorations that the default charts use..
        /// </summary>
        internal static string SceneEggs {
            get {
                return ResourceManager.GetString("SceneEggs", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Similar to CharacterScoreboard, however, it instead adds icon clickable icon representations,\nwhich automatically switches to the character combo when clicked..
        /// </summary>
        internal static string Scoreboard_characters_and_elfins {
            get {
                return ResourceManager.GetString("Scoreboard characters and elfins", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows charters (not players) to set custom scroll speeds.\nIt&apos;s completely up to you whether you wanna use this, most charters don&apos;t use it though..
        /// </summary>
        internal static string ScrollSpeed {
            get {
                return ResourceManager.GetString("ScrollSpeed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to An extension to SearchPlusPlus, allowing you to create folders\nand search for songs in said folders..
        /// </summary>
        internal static string Search___Folder_Tag {
            get {
                return ResourceManager.GetString("Search++ Folder Tag", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Any search feature you will ever need (probably).\nOptional dependencies: KeybindManager, CustomAlbums.
        /// </summary>
        internal static string SearchPlusPlus {
            get {
                return ResourceManager.GetString("SearchPlusPlus", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Displays the title, artist, and difficulty of the song in the top-right corner during play..
        /// </summary>
        internal static string Song_Desc {
            get {
                return ResourceManager.GetString("Song Desc", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A mod which changes the judgement window and make the game harder\nYou can manually change the judgement range in Stricter Judge.cfg.
        /// </summary>
        internal static string StricterJudge {
            get {
                return ResourceManager.GetString("StricterJudge", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Displays actual ranking instead of &quot;999+&quot; for ranks 1000 to 2000.
        /// </summary>
        internal static string True_rank_for_999_ {
            get {
                return ResourceManager.GetString("True rank for 999+", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to disable certain visual aspects of the game (example: hit circles).
        /// </summary>
        internal static string UI_Disable {
            get {
                return ResourceManager.GetString("UI Disable", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Makes Sleepwalker Rin do mashers at max speed instead of the normal slow speed..
        /// </summary>
        internal static string UltraInstinctSleepwalking {
            get {
                return ResourceManager.GetString("UltraInstinctSleepwalking", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to An alternative to UnlockAll.\nMaster&apos;s stay unlocked only for as long as the mod is installed..
        /// </summary>
        internal static string UnlockAll2 {
            get {
                return ResourceManager.GetString("UnlockAll2", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allows you to switch victory screen in the settings menu either to DJMAX or Arknights. Swaps original screen with arknights/djmax and vise versa..
        /// </summary>
        internal static string VictoryScreenSwitcher {
            get {
                return ResourceManager.GetString("VictoryScreenSwitcher", resourceCulture);
            }
        }
    }
}
